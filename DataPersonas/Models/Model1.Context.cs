//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataPersonas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Generacion24Entities : DbContext
    {
        public Generacion24Entities()
            : base("name=Generacion24Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EstadoCivil> EstadoCivil { get; set; }
        public virtual DbSet<Personas> Personas { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
    
        public virtual int spAgregarPersona(string nombre, string paterno, Nullable<int> edad, Nullable<decimal> salario, Nullable<int> sexoId, Nullable<int> estadoCivilId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paternoParameter = paterno != null ?
                new ObjectParameter("Paterno", paterno) :
                new ObjectParameter("Paterno", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            var sexoIdParameter = sexoId.HasValue ?
                new ObjectParameter("SexoId", sexoId) :
                new ObjectParameter("SexoId", typeof(int));
    
            var estadoCivilIdParameter = estadoCivilId.HasValue ?
                new ObjectParameter("EstadoCivilId", estadoCivilId) :
                new ObjectParameter("EstadoCivilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAgregarPersona", nombreParameter, paternoParameter, edadParameter, salarioParameter, sexoIdParameter, estadoCivilIdParameter);
        }
    }
}
